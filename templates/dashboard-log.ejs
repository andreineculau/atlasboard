<!doctype html>
<!--[if lt IE 7]>
<html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>
<html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>
<html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en"> <!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>AtlasBoard</title>
    <meta name="viewport" content="width=device-width">

    <link rel="stylesheet" href="stylesheets/normalize.css" type="text/css" media="screen" />
    <link rel="stylesheet" href="stylesheets/log-viewer.css" type="text/css" media="screen" />

    <link rel="icon" type="image/png" href="images/favicon.png"/>

</head>
<body>

<div id="main">

  <div class="logcontainer left" id="server">
    <h1>Server</h1>
    <div class="toolbar_actions">
      <input class="pause" type="checkbox"> pause
      <button  class="clear">clear logs</button>
    </div>

    <div class="filter">
      filter: <input type="text" placeholder=" - use regex for dynamic filtering - " />
    </div>

    <div class="content"></div>
  </div>

  <div class="logcontainer right" id="client">
    <h1>Client</h1>
    <div class="toolbar_actions">
      <button  class="clear">clear logs</button> <input class="pause" type="checkbox"> pause
    </div>

    <div class="filter">
      filter: <input type="text" placeholder=" - use regex for dynamic filtering - " />
    </div>

    <div class="content"></div>
  </div>

</div>

<script src="build/vendor.js"></script>
<script src="socket.io/socket.io.js"></script>

<script>

  var maxLogsPerContainer = 100;
  var socket = io.connect();

  socket.on("connect", function() {
    console.log('connected');
    $('#main-container').removeClass("disconnected");

    socket.on("disconnect", function() {
      $('#main-container').addClass("disconnected");
      console.log('disconnected');
    });

    // reconnect
    socket.on('reconnecting', function () {
      console.log('reconnecting...');
    });

    socket.on('reconnect_failed', function () {
      console.log('reconnected FAILED');
    });

    socket.on('client', function(data){
      log('client', data.error ? 'error' : 'log', JSON.stringify(data));
    });

    socket.on('server', function(data){
      log('server', data.type, data.msg);
    });

  });

  function timestamp (){
    return '<span class="timestamp">' + moment().format("h:mm:ss") + '</span>';
  }

  //msg_type: log, warn, error
  function log (container, level, content){
    var filter = $('div.filter input', '#' + container).val();
    if (filter){
      if (content.indexOf(filter)==-1)
        return;
    }

    if ($('.pause', '#' + container).is(':checked')){
      return;
    }

    content = '<span class="log_text logtype_' + level + '"">' + escapeHtml(content) + '</span>';
    $('.content', '#' +container).prepend('<div class="entry">' + timestamp() + ' ' + content + '</div>');

    // maintain a limit number of entries in the screen (delete old ones)
    if ($('.content .entry', '#' + container).length == (maxLogsPerContainer + 1)){
      $('.content .entry', '#' + container)[maxLogsPerContainer].remove();
    }
  }

  // escape html - https://github.com/janl/mustache.js/blob/master/mustache.js#L82
  var entityMap = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': '&quot;',
    "'": '&#39;',
    "/": '&#x2F;'
  };

  function escapeHtml(string) {
    return String(string).replace(/[&<>"'\/]/g, function (s) {
      return entityMap[s];
    });
  }

  $(function(){
    $('button.clear').click(function(){
      $('div.content', $(this).closest('div.logcontainer')).empty();
    });

    $('.content').on('click', '.entry', function(){
      $(this).toggleClass('expanded');
    });

    $('div.filter input').keyup(function(){
      var filter = $(this).val();
      var entries = $('.content .entry', $(this).closest('div.logcontainer'));
      var pattern = new RegExp(filter);
      entries.each(function(){
        if (filter && !pattern.test($('span.log_text', this).text())){
          $(this).hide();
        }
        else {
          $(this).show();
        }
      });
    });
  });

</script>
</body>
</html>
