var assert = require ('assert');
var path = require ('path');
var item_manager = require('../lib/atlasboard_item_manager');

describe ('item_manager', function(){

  var packagesLocalFolder = path.join(process.cwd(), "/test/packages");
  var packagesAtlasboardFolder = path.join(process.cwd(), "/packages");

  describe ('dashboards', function(){

    it('should have the right number of dashboards', function(done){
      item_manager.get([packagesLocalFolder, packagesAtlasboardFolder], "dashboards", ".json", function(err, dashboards){
        assert.ok(!err, err);
        assert.equal(dashboards.length, 5);
        done();
      });
    });

    it('should not read dashboards with invalid extensions', function(done){
      item_manager.get([packagesLocalFolder, packagesAtlasboardFolder], "dashboards", ".json", function(err, dashboards){
        assert.ok(!err, err);
        dashboards.forEach(function(item){
          assert.ok(path.extname(item) === ".json");
        });
        done();
      });
    });
  });

  describe ('jobs', function(){
    it('should have the right number of jobs', function(done){
      item_manager.get([packagesLocalFolder], "jobs", ".js", function(err, jobs){
        assert.ok(!err, err);
        assert.equal(jobs.length, 4);
        done();
      });
    });
  });

  describe ('widgets', function(){
    it('should have the right number of widgets', function(done){
      item_manager.get([packagesLocalFolder], "widgets", ".js", function(err, widgets){
        assert.ok(!err, err);
        assert.equal(widgets.length, 1);
        done();
      });
    });
  });

});