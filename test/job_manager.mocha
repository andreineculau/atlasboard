var assert = require ('assert');
var path = require ('path');
var jobs_manager = require('../lib/job-manager');

describe ('job_manager', function(){

  var packagesLocalFolder = path.join(process.cwd(), "/test/packages");
  var packagesWithInvalidJob = path.join(process.cwd(), "/test/package_invalid_job");

  //we use only wallboard local folder, since we donÂ´t want our tests to depend on atlasboard jobs
  //var packagesAtlasboardFolder = path.join(process.cwd(), "/packages");

  var configPath = path.join(process.cwd(), "/test/config");

  it('should have right dashboard names', function(done){

    jobs_manager.get_jobs([packagesLocalFolder], configPath, function(err, job_workers){
      assert.ok(!err, err);
      assert.equal(8, job_workers.length);

      assert.equal(job_workers[0].dashboard_name, "test_dashboard1");
      assert.equal(job_workers[1].dashboard_name, "test_dashboard1");

      assert.equal(job_workers[2].dashboard_name, "test_dashboard2");
      assert.equal(job_workers[3].dashboard_name, "test_dashboard2");
      assert.equal(job_workers[4].dashboard_name, "test_dashboard2");

      assert.equal(job_workers[5].dashboard_name, "other_test_dashboard1");
      done();
    });
  });


  it('should be able to get disable widgets', function(done){
    jobs_manager.get_jobs([packagesLocalFolder], configPath, function(err, job_workers){
      assert.ok(!err);
      var disabled_jobs = job_workers.filter(function(job){ return job.widget_item.enabled;});
      assert.equal(6, disabled_jobs.length);
      done();
    });
  });


  it('should return error if invalid job is found on dashboard', function(done){
    jobs_manager.get_jobs([packagesWithInvalidJob], configPath, function(err, job_workers){
      assert.ok(err);
      done();
    });
  });


  it('should have tasks', function(done){
    jobs_manager.get_jobs([packagesLocalFolder], configPath, function(err, job_workers){
      assert.ok(!err);
      job_workers.forEach(function(job){
        assert.ok(typeof job.task === "function" );
      });
      done();
    });
  });


  it('should have config', function(done){
    jobs_manager.get_jobs([packagesLocalFolder], configPath, function(err, job_workers){
      assert.ok(!err);
      // job_conf1 is defined in general config file (shared config)
      // the rest of them are defined in the related dashboard file.
      job_workers.forEach(function(job){
        assert.ok(job.config.interval);
      });
      done();
    });
  });

});